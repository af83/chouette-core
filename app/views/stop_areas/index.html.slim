- breadcrumb :stop_areas, @stop_area_referential
/ PageHeader
= pageheader 'arret',
             t('stop_areas.index.title'),
             '',
             '',
             (policy(Chouette::StopArea).create? ? link_to(t('stop_areas.actions.new'), new_stop_area_referential_stop_area_path(@stop_area_referential), class: 'btn btn-primary') : '')

/ PageContent
.page_content
  .container-fluid
    - if params[:q].present? or @stop_areas.any?
      .row
        .col-lg-12
            = render 'filters'

    - if @stop_areas.any?
      .row
        .col-lg-12
          = table_builder_2 @stop_areas,
            [ \
              TableBuilderHelper::Column.new( \
                name: 'ID Reflex', \
                attribute: Proc.new { |n| n.try(:user_objectid) }, \
                sortable: false \
              ), \
              TableBuilderHelper::Column.new( \
                key: :name, \
                attribute: 'name', \
                link_to: lambda do |stop_area| \
                  referential_stop_area_path( \
                    @stop_area_referential, \
                    stop_area \
                  ) \
                end \
              ), \
              TableBuilderHelper::Column.new( \
                key: :registration_number, \
                attribute: 'registration_number' \
              ), \
              TableBuilderHelper::Column.new( \
                key: :deleted_at, \
                attribute: Proc.new { |s| line_status(s.deleted_at) } \
              ), \
              TableBuilderHelper::Column.new( \
                key: :zip_code, \
                attribute: 'zip_code' \
              ), \
              TableBuilderHelper::Column.new( \
                key: :city_name, \
                attribute: 'city_name' \
              ), \
              TableBuilderHelper::Column.new( \
                key: :area_type, \
                attribute: Proc.new { |s| (s.area_type.nil? ? '-' : t("enumerize.stop_area.area_type.#{s.try(:area_type)}")) } \
              ), \
            ],
            links: [:show, :edit, :delete],
            cls: 'table has-filter has-search'

          = new_pagination @stop_areas, 'pull-right'

    - unless @stop_areas.any?
      .row.mt-xs
        .col-lg-12
          = replacement_msg t('stop_areas.search_no_results')
