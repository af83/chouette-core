= simple_form_for [@stop_area_referential, @stop_area], html: {class: 'form-horizontal', id: 'stop_area_form'}, wrapper: :horizontal_form do |f|
  - if !manage_itl
    .row
      .col-lg-12
        h2.mb-lg= t("stop_areas.form.sections.identification")
        = f.input :id, as: :hidden
        = f.input :name, input_html: {title: t("formtastic.titles#{format_restriction_for_locales(@referential)}.stop_area.name")}
        - if has_feature?(:stop_area_localized_names)
          .form-group
            .col-sm-3.col-xs-5
            .col-sm-9.col-xs-7.locales
              - default = f.object.stop_area_referential.sorted_locales.select{|l| l[:default] || f.object.localized_names[l[:code]].present? }.map{|l| l[:code]}
              - default.each do |k|
                .col-md-6= f.input "localized_names[#{k}]", input_html: { value: f.object.localized_names[k.to_s] }, label: label_for_country(k)

          .row.add-locales.mb-md
            - countries = f.object.stop_area_referential.sorted_locales.map{|l| l[:code]} - default
            - if countries.present?
              - options = countries.map { |c| "<option id='#{c}' country_name='#{@stop_area_referential.locale_name(code: c)}'>#{@stop_area_referential.locale_name(code: c)}</option>" }.join('')
              .col-sm-4.col-xs-5
              .col-sm-8.col-xs-7
                = select_tag :add_locale, raw(options), 'data-select2ed': 'true'
                = link_to '#', class: 'btn btn-primary add-locale' do
                  = fa_icon :plus
                  = 'actions.add'.t
        - if has_feature?("route_stop_areas_all_types")
          = f.input :kind,
              as: :radio_buttons,
              checked: @stop_area.new_record? ? :commercial : @stop_area.kind,
              input_html: { disabled: !@stop_area.new_record? },
              include_blank: false,
              item_wrapper_class: 'radio-inline',
              wrapper: :horizontal_form,
              disabled: !@stop_area.new_record?
          - unless @stop_area.new_record?
              = f.input :kind, as: :hidden, input_html: { value: @stop_area.kind }
          .slave data-master="[name='stop_area[kind]']" data-value="commercial"
        - else
          = f.input :kind, as: :hidden, input_html: { value: :commercial }
        = f.input :parent_id, as: :select, collection: [f.object.parent_id], input_html: { data: { select2ed_placeholder: Chouette::StopArea.tmf('parent'), select2ed_allow_clear: 'true', select2_ajax: 'true', url: autocomplete_stop_area_referential_stop_areas_path(@stop_area_referential), initvalue: {id: f.object.parent_id, text: f.object.parent.try(:formatted_selection_details)}}}
        - %i(non_commercial commercial).each do |kind|
          .slave data-master="[name='stop_area[kind]']" data-value=kind
            = f.input :area_type, as: :select, input_html: {id: kind, disabled: !@stop_area.new_record?}, collection: area_type_options(kind), include_blank: false, disabled: !@stop_area.new_record?

        = f.input :is_referent, as: :switchable_checkbox
        = f.input :referent_id, as: :select, collection: [f.object.referent_id], input_html: { style: 'width: 100%', data: { select2ed_placeholder: Chouette::StopArea.tmf('referent'), select2ed_allow_clear: 'true', select2_ajax: 'true', url: (autocomplete_stop_area_referential_stop_areas_path(@stop_area_referential)+"?referent_only=true"), initvalue: {id: f.object.referent_id, text: f.object.referent.try(:formatted_selection_details)}}}, wrapper_html: { id: 'referent_input' }
        = f.input :registration_number, required: stop_area_registration_number_is_required(f.object), input_html: {title: stop_area_registration_number_title(f.object), value: stop_area_registration_number_value(f.object)}, hint: stop_area_registration_number_hint
        = f.input :status, as: :select, collection: stop_area_status_options, include_blank: false
        = f.input :stop_area_provider_ids, as: :autocomplete_stop_area_provider, autocomplete_url: autocomplete_stop_area_referential_stop_area_providers_path(@stop_area_referential, format: :json), load_url: stop_area_referential_stop_area_providers_path(@stop_area_referential), input_html: {multiple: true}

    .separator.section_separator

    .row
      .col-lg-12
        h2.mb-lg= t("stop_areas.form.sections.location")

        - if @stop_area.projection.present? && @stop_area.projection_type_label.present?
          = f.input :projection_xy, label: t("activerecord.attributes.stop_area.projection_xy", projection: @referential.projection_type_label), input_html: { title: t("formtastic.titles#{format_restriction_for_locales(@referential)}.stop_area.projection_xy") }

        = f.input :coordinates, input_html: { title: t("formtastic.titles#{format_restriction_for_locales(@referential)}.stop_area.coordinates") }
        = f.input :street_name
        = f.input :zip_code, input_html: { title: t("formtastic.titles#{format_restriction_for_locales(@referential)}.stop_area.zip_code") }
        = f.input :city_name, required: format_restriction_for_locales(@referential) == '.hub', input_html: {title: t("formtastic.titles#{format_restriction_for_locales(@referential)}.stop_area.city_name")}
        = f.input :postal_region
        = f.input :country_code, as: :country, priority: ['FR', 'GB', 'DE', 'ES'], include_blank: true, input_html: { data: { select2ed: true } }
        = f.input :nearest_topic_name, input_html: { title: t("formtastic.titles#{format_restriction_for_locales(@referential)}.stop_area.nearest_topic_name") }
        = f.input :time_zone, as: :full_time_zone, include_blank: true

    .separator.section_separator

    .row
      .col-lg-12
        h2.mb-lg= t("stop_areas.form.sections.general")

        - if has_feature?(:stop_area_waiting_time)
          = f.input :waiting_time, input_html: { min: 0 }

        = f.input :fare_code
        = f.input :url

        - if !manage_itl
          = f.input :mobility_restricted_suitability, as: :switchable_checkbox
          = f.input :stairs_availability, as: :switchable_checkbox
          = f.input :lift_availability, as: :switchable_checkbox

        - if resource.custom_fields.present?
          - resource.custom_fields.each do |code, field|
            = field.input(f).to_s

        = f.input :comment, as: :text, input_html: {rows: 5, title: t("formtastic.titles#{format_restriction_for_locales(@referential)}.stop_area.comment")}

  .separator

  = cancel_button
  = f.button :submit, t('actions.submit'), class: 'btn btn-default formSubmitr', form: 'stop_area_form'

= javascript_pack_tag "stop_areas/new"
coffee:
  $('.add-locale').click (e)->
    option = $('#add_locale').find('option:selected')
    return unless option.length > 0

    row  = $("<div class='col-md-6'><div class='form-group'><label class='col-sm-4 col-xs-5 control-label string optional' for='stop_area_localized_names[#{option.attr('id')}]'><span title='#{option.attr('country_name')}' class='mr-xs flag-icon flag-icon-#{option.attr('id').split('_')[1].toLowerCase()}'></span></label><div class='col-sm-8 col-xs-7'><input class='form-control string optional' value='' type='text' name='stop_area[localized_names[#{option.attr('id')}]' id='stop_area_localized_names[#{option.attr('id')}]'></div></div></div>")
    row.appendTo $('.locales')
    option.remove()
    unless $('#add_locale').find('option:selected').length > 0
      $('.row.add-locales').remove()
    e.preventDefault()
    false
