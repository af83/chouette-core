- breadcrumb :stop_area_referential, @stop_area_referential
- if policy(@stop_area_referential).synchronize?
  - content_for :page_header_actions do
    = link_to(t('actions.sync'), sync_stop_area_referential_path(@stop_area_referential), method: :post, class: 'btn btn-default')

- content_for :page_header_content do
  .row.mb-md
    .col-lg-12.text-right
      = link_to stop_area_referential_stop_areas_path(@stop_area_referential), class: 'btn btn-primary' do
        = Referential.human_attribute_name(:stop_areas)
        em.small = " (#{@stop_area_referential.stop_areas.count})"
- page_header_content_for @stop_area_referential

.page_content
  .container-fluid
    .row
      .col-lg-12
        - unless @stop_area_referential.stop_area_referential_syncs.empty?
          table.table
            thead
              tr
                th Synchronis√©
                th Statut
                th Message

            tbody
              - @stop_area_referential.stop_area_referential_syncs.each_with_index do |sync, i|
                / Display only 10 msgs
                - if i < 10
                  - unless sync.stop_area_referential_sync_messages.empty?
                    - sync.stop_area_referential_sync_messages.last.tap do |log|
                      - if log.criticity = log.criticity
                        tr
                          td style='width:150px'
                            = l(log.created_at, format: :short_with_time)
                          td.text-center
                            .fa.fa-circle class="text-#{criticity_class(log.criticity)}"
                          td
                            - data = log.message_attributes.symbolize_keys!
                            - data[:processing_time] = distance_of_time_in_words(data[:processing_time].to_i)
                            = t("stop_area_referential_sync.message.#{log.message_key}", log.message_attributes.symbolize_keys!).html_safe
