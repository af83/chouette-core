- breadcrumb :route, @referential, @route
- page_header_content_for @route
- content_for :page_header_actions do
  - if policy(@route).edit?
    = link_to(t('actions.edit'), edit_referential_line_route_path(@referential, @line, @route), class: 'btn btn-default')

- content_for :page_header_content do
  .row.mb-sm
    .col-lg-12.text-right
      - @route.action_links.each do |link|
        = link_to link.href,
            method: link.method,
            data: link.data,
            class: 'btn btn-primary' do
              = link.content

.page_content
  .container-fluid
    .row
      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        = definition_list t('metadatas'),
          { t('objectid') => @route.get_objectid.short_id,
            t('activerecord.attributes.route.published_name') => (@route.published_name ? @route.published_name : '-'),
            @route.human_attribute_name(:wayback) => (@route.wayback ? @route.wayback_text : '-' ),
            @route.human_attribute_name(:opposite_route) => (@route.opposite_route ? @route.opposite_route.name : '-') }

      - if @route_sp.any?
        .col-lg-6.col-md-6.col-sm-12.col-xs-12
          #route_map.map.mb-lg

    .row
      .col-lg-12
        .h3 = t('routes.show.stop_areas.title')
        - if @route_sp.any?
          = table_builder_2 @route_sp,
            [ \
              TableBuilderHelper::Column.new( \
                name: t('id_reflex'), \
                attribute: Proc.new { |s| s.try(:stop_area).try(:user_objectid) } \
              ), \
              TableBuilderHelper::Column.new( \
                key: :name, \
                attribute: Proc.new { |s| content_tag :span, s.stop_area&.name, class: s.stop_area&.area_type }, \
                link_to: lambda do |stop_point| \
                  referential_stop_area_path(@referential, stop_point.stop_area) \
                end \
              ), \
              TableBuilderHelper::Column.new( \
                key: :deleted_at, \
                attribute: Proc.new { |s| line_status(s.try(:stop_area).deleted_at) } \
              ), \
              TableBuilderHelper::Column.new( \
                key: :zip_code, \
                attribute: Proc.new { |s| s.try(:stop_area).try(:zip_code) } \
              ), \
              TableBuilderHelper::Column.new( \
                key: :city_name, \
                attribute: Proc.new { |s| s.try(:stop_area).try(:city_name) } \
              ), \
              TableBuilderHelper::Column.new( \
                key: :for_boarding, \
                attribute: Proc.new { |s| t("stop_points.stop_point.for_boarding.#{s.for_boarding}") } \
              ), \
              TableBuilderHelper::Column.new( \
                key: :for_alighting, \
                attribute: Proc.new { |s| t("stop_points.stop_point.for_alighting.#{s.for_alighting}") } \
              ) \
            ],
            links: [:show],
            sortable: false,
            cls: 'table has-stoppoints'

        - else
          = replacement_msg t('stop_areas.search_no_results')

= javascript_tag do
  | window.route = "#{URI.escape(route_json_for_edit(@route))}"

= javascript_pack_tag 'routes/show.js'
