- breadcrumb :netex_import, @workbench, @import

.row
  .col-lg-6.col-md-6.col-sm-12.col-xs-12
    - metadata = {Import::Base.tmf(:status) => operation_status(@import.status, verbose: true) }
    - metadata = metadata.update({Import::Base.tmf(:referential) => @import.referential ? link_to(@import.referential.name, [@import.referential]) : "-" })
    - metadata = metadata.update Hash[*@import.visible_options.map{|k, v| [t("activerecord.attributes.import.#{@import.object.class.name.demodulize.underscore}.#{k}"), @import.display_option_value(k, self)]}.flatten]
    = definition_list t('metadatas'), metadata

.col-lg-12
  .error_messages
    = render 'shared/iev_interfaces/messages', messages: @import.main_resource.messages

- if @import.resources.present?
  .col-lg-12
    h2 = t('imports.show.netex.table_title')
  .col-lg-12
    = t('imports.show.netex.table_explanation')
  .col-lg-12
    = table_builder_2 @import.resources.where(resource_type: :file),
      [ \
        TableBuilderHelper::Column.new( \
          key: :name, \
          attribute: 'name', \
          sortable: false, \
        ), \
        TableBuilderHelper::Column.new( \
          key: :status, \
          attribute: Proc.new { |n| import_resource_status(n.status) }, \
          sortable: false, \
        ), \
        TableBuilderHelper::Column.new( \
          name: t('imports.show.table.test_results') , \
          attribute: Proc.new { |n| I18n.t('import_resources.index.metrics', n.metrics.deep_symbolize_keys) }, \
          sortable: false, \
        ), \
        TableBuilderHelper::Column.new( \
          name: t('imports.show.table.download') , \
          attribute: Proc.new { |n| '<i class="fa fa-download" aria-hidden="true"></i>'.html_safe }, \
          sortable: false, \
          link_to: lambda do |import_resource| \
            workbench_import_import_resource_import_messages_path(import_resource.import.workbench, import_resource.import, import_resource, format: 'csv' ) \
          end \
        ), \
      ],
      cls: 'table has-search'
