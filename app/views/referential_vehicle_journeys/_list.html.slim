.row
  .col-lg-12
    .select_table
      = table_builder_2 @vehicle_journeys,
        [ \
          TableBuilderHelper::Column.new( \
            name: t('objectid'), \
            attribute: Proc.new { |n| n.get_objectid.short_id }, \
            sortable: false \
          ), \
          TableBuilderHelper::Column.new( \
            key: :published_journey_name, \
            attribute: 'published_journey_name', \
            link_to: lambda do |vehicle_journey| \
              vehicle_journey.published_journey_name ? referential_line_route_vehicle_journeys_path(@referential, vehicle_journey.route.line, vehicle_journey.route) : '' \
            end, \
            sortable: true \
          ), \
          TableBuilderHelper::Column.new( \
            key: :line, \
            attribute: Proc.new {|v| v.route.line.name}, \
            sortable: true \
          ), \
          TableBuilderHelper::Column.new( \
            key: :route, \
            attribute: Proc.new {|v| v.route.name}, \
            sortable: true \
          ), \
          TableBuilderHelper::Column.new( \
            key: :departure_time, \
            attribute: Proc.new {|v| v.vehicle_journey_at_stops.first&.departure_local }, \
            sortable: true \
          ), \
          [@starting_stop, @ending_stop].compact.map{|stop| \
            TableBuilderHelper::Column.new( \
              attribute: Proc.new {|v| v.vehicle_journey_at_stops.where("stop_points.stop_area_id" => stop.id).last&.arrival_local }, \
              sortable: false, \
              name: stop.name \
            )\
          }, \
          TableBuilderHelper::Column.new( \
            key: :arrival_time, \
            attribute: Proc.new {|v| display_time_with_day_offset(v.vehicle_journey_at_stops.last&.arrival_local, v.vehicle_journey_at_stops.last&.arrival_day_offset) }, \
            sortable: true, \
          ), \
        ].flatten.compact,
        cls: 'table has-filter has-search'

    = new_pagination @vehicle_journeys, 'pull-right'
