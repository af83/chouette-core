- breadcrumb :compliance_check_set_executed, @workbench, @compliance_check_set
- page_header_content_for @compliance_check_set

.page_content
  .container-fluid
    .row
      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        = definition_list t('metadatas'),
            ComplianceCheckSet.human_attribute_name(:name) => @compliance_check_set.name

  - if params[:q].present? || @blocks_to_compliance_checks_map.any? || @direct_compliance_checks
    .row
      .col-lg-12
        = render '/compliance_checks/filters'

        - if @direct_compliance_checks.try(:any?)
          .row
            .col-lg-12
              h2
                = transport_mode_text()
          .row
            .col-lg-12
              = table_builder_2 @direct_compliance_checks,
                      [ \
                  TableBuilderHelper::Column.new( \
                    key: :code, \
                    attribute: 'code' \
                  ), \
                  TableBuilderHelper::Column.new( \
                    key: :name, \
                    attribute: 'name', \
                    link_to: lambda do |compliance_check| \
                        compliance_check_path(compliance_check) \
                      end \
                  ), \
                  TableBuilderHelper::Column.new( \
                    key: :criticity, \
                    attribute: 'criticity' \
                  ), \
                  TableBuilderHelper::Column.new( \
                    key: :comment, \
                    attribute: 'comment' \
                  ), \
                ],
                sortable: true,
                cls: 'table has-filter has-search',
                model: ComplianceCheck

    - @blocks_to_compliance_checks_map.each do |block, compliance_checks|

      - if compliance_checks.try(:any?)
        .row
          .col-lg-12
            h2
              = transport_mode_text(block)
        .row
          .col-lg-12
            = table_builder_2 compliance_checks,
                    [ \
                TableBuilderHelper::Column.new( \
                  key: :code, \
                  attribute: 'code' \
                ), \
                TableBuilderHelper::Column.new( \
                  key: :name, \
                  attribute: 'name', \
                  link_to: lambda do |compliance_check| \
                      compliance_check_path(compliance_check) \
                    end \
                ), \
                TableBuilderHelper::Column.new( \
                  key: :criticity, \
                  attribute: 'criticity' \
                ), \
                TableBuilderHelper::Column.new( \
                  key: :comment, \
                  attribute: 'comment' \
                ), \
              ],
              sortable: true,
              cls: 'table has-filter has-search',
              model: ComplianceCheck
