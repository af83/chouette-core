- breadcrumb :compliance_control, @compliance_control
/ PageHeader
= pageheader 'jeux-de-controle',
        t('compliance_controls.show.title'),
        '',
        link_to(t('actions.edit'), edit_compliance_control_set_compliance_control_path(params[:compliance_control_set_id], params[:id]), class: 'btn btn-default') do

/ PageContent
.page_content
  .container-fluid
    .row
      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        /- @compliance_control.control_attributes.each_with_index do |(key,value), index|
        = definition_list t('metadatas'),
              { \
                ComplianceControl.human_attribute_name(:name) => @compliance_control.name,
                ComplianceControl.human_attribute_name(:code) => @compliance_control.code,
                ComplianceControl.human_attribute_name(:criticity) => @compliance_control.criticity,
                ComplianceControl.human_attribute_name(:comment) => @compliance_control.comment,
                I18n.t('activerecord.attributes.compliance_control.predicate') => @compliance_control.class.predicate,
                I18n.t('activerecord.attributes.compliance_control.prerequisite') => @compliance_control.class.prerequisite,
              }.merge( \
                {}.tap do |hash| \
                  @compliance_control.class.dynamic_attributes.each do |attribute| \
                    hash[ComplianceControl.human_attribute_name(attribute)] = @compliance_control.send(attribute) \
                  end \
                end \
              )
        - if @compliance_control.compliance_control_block
          = definition_list t('compliance_controls.show.metadatas.compliance_control_block'),
            I18n.t('activerecord.attributes.compliance_control_blocks.transport_mode') => I18n.t("enumerize.transport_mode.#{@compliance_control.compliance_control_block.transport_mode}"),
            I18n.t('activerecord.attributes.compliance_control_blocks.transport_submode') => I18n.t("enumerize.transport_submode.#{@compliance_control.compliance_control_block.transport_submode}")